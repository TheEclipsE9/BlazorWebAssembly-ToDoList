@inject BlazorWebAssembly.Client.Services.IToDoService ToDoService
@inject HttpClient Http

<h1>My ToDoList</h1>

<CreateComponent Callback="@CreateNewToDoItem"/>

@if (ToDoItems == null)
{
    <div>
        Getting data from Web API...
    </div>
}
else if (ToDoItems.Count == 0)
{
    <div>
        There is nothing to do.
    </div>
}
else
{
    @foreach (var item in ToDoItems)
    {
        <div>
            <div>
                <span>
                    @item.Title
                </span>
                <span>
                    <span class="oi oi-check" aria-hidden="true" @onclick="()=>MarkAsDone(item)"></span>
                </span>
                <span>
                    <span class="oi oi-trash" aria-hidden="true" @onclick="()=>MarkAsDeleted(item)"></span>
                </span>
            </div>
        </div>
    }
}

@code {
    private List<ToDoItem> ToDoItems;

    protected override async Task OnInitializedAsync()
    {
        ToDoItems = await ToDoService.GetAllToDoItems();
    }

    private async Task MarkAsDone(ToDoItem toDoItem)
    {
        ToDoItems.Remove(toDoItem);
        await ToDoService.MarkAsDone(toDoItem);
    }

    private async Task MarkAsDeleted(ToDoItem toDoItem)
    {
        ToDoItems.Remove(toDoItem);
        await ToDoService.MarkAsDeleted(toDoItem);
    }

    private async Task CreateNewToDoItem(ToDoItem newToDoItem)
    {
        await ToDoService.CreateToDoItem(newToDoItem);
        //if status OK => add
        ToDoItems.Add(newToDoItem);
    }
}